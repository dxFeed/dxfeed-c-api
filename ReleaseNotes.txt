Version 7.2.0
* All sample programs were moved to the `samples` directory
* [DXFC-212] Extended the Order event for Full Order Book
  - the `action`, `action_time`, `order_id`, `aux_order_id`, `trade_id`, `trade_price`, `trade_size` fields were added to the `dxf_order_t` structure
    See the `dxf_order_action_t` enum description (documentation) where it is indicated in which cases which fields will be filled.
  - the FullOrderBook sample was added.

Version 7.1.0
* [DXFC-209] Implemented the heartbeat semantics with payload
  - Added the new function `dxf_set_on_server_heartbeat_notifier(dxf_connection_t connection, dxf_conn_on_server_heartbeat_notifier_t notifier, void* user_data)`
    that sets a server heartbeat notifier's callback to the connection.
    This notifier will be invoked when the new heartbeat arrives from a server and contains non empty payload

    Function parameters:
      - connection - The handle of a previously created connection
      - notifier   - The notifier callback function pointer
      - user_data  - The data to be passed to the callback function

  - Added the new callback type of a connection incoming heartbeat notification `dxf_conn_on_server_heartbeat_notifier_t`

    Passed parameters:
      - connection      - The connection handle
      - server_millis   - The server time in milliseconds (from the incoming heartbeat payload)
      - server_lag_mark - The server's messages composing lag time in microseconds (from the incoming heartbeat payload)
      - connection_rtt  - The calculated connection RTT in microseconds
      - user_data       - The user data passed to dxf_set_on_server_heartbeat_notifier

    An example of implementation:
    ```c
    void on_server_heartbeat_notifier(dxf_connection_t connection, dxf_long_t server_millis, dxf_int_t server_lag_mark,
        dxf_int_t connection_rtt, void* user_data)
    {
        fwprintf(stderr, L"\n##### Server time (UTC) = %" PRId64 " ms, Server lag = %d us, RTT = %d us #####\n",
            server_millis, server_lag_mark, connection_rtt);
    }
    ```

  See usage example in the CommandLineSample.c

Version 7.0.0
* [DXFC-175] [Breaking changes] Extended the Trade and Profile events to support additional fields from QD records
  - the `_52_high_price` & `_52_low_price` `Profile` event fields were renamed to `high_52_week_price` &
    `low_52_week_price` respectively
  - the `change` field was added to `TradeETH` event
* [DXFC-207] Extended the Trade and TradeETH events with new field dayId
  - the `day_id` field was added to the `dx_trade_t`, `dx_trade_eth_t` and `dxf_trade_t` structures.
    `day_id` - identifier of the day that `Trade` or `TradeETH` represents. Identifier of the day is the number of
    days passed since January 1, 1970.
* [DXFC-181] Extended the Underlying and Series events with putVolume and callVolume fields
  - the `call_volume` and `put_volume` fields were added to the `dx_series_t`, `dxf_series_t`, `dx_underlying_t`
    and `dxf_underlying_t` structures.
    `call_volume` - call options traded volume for a day. `put_volume` - put options traded volume for a day
  - the `option_volume` field was added to the `dxf_series_t`, `dxf_underlying_t` structures.
    `option_volume` - options traded volume  for a day.
* [DXFC-176] [Samples] Subscription methods are now called in a more correct order. Fixed output of hostnames.
* [DXFC-208] Added the ability to configure client\server heartbeat parameters
  - The default heartbeat period (DEFAULT_HEARTBEAT_PERIOD) is set to 10 seconds. Which corresponds to the defaults
    of Java API. The default heartbeat timeout remains the same (120 seconds).
  - Added the ability to load a configuration from a file or a string:
    The config file sample: [Sample](https://github.com/dxFeed/dxfeed-c-api/blob/master/dxfeed-api-config.sample.toml)
    The config file properties:
    - `network.heartbeatPeriod` -- The period between sending heartbeat messages (default value = 10 seconds)
    - `network.heartbeatTimeout` -- Timeout for receiving messages from the server, after which the api tries to
      change the server and/or reconnect (default value = 120 seconds)
  - Added the new function `dxf_load_config_from_file(const char* file_name)` that initializes the C-API configuration
    and loads a config (in TOML format) from a file.
      - `file_name` -- The config (in TOML format) file name
  - Added the new function `dxf_load_config_from_string(const char* config)` that initializes the C-API configuration
    and loads a config (in TOML format) from a string.
      - `config` -- The config (in TOML format) string
  - Added the new function `dxf_load_config_from_wstring(dxf_const_string_t config)` that initializes the C-API configuration
    and loads a config (in TOML format) from a wide string (dxf_const_string_t)
      - `config` -- The config (in TOML format) string

  For the successful application of the configuration, these functions must be called before creating any connection.
  Examples of using functions can be found in their descriptions and in the generated documentation.

Version 6.2.0
* Added missing documentation to EventData.h file
* [DXFC-205] Fixed a bug with disconnecting (by server side) when removing symbols if no symbols have been added
* [DXFC-203] Fixed segfaults and debug assertion failings when clearing symbols in a subscription's event listener
* [DXFC-201] Added the ability to call logging initialization again without any effect
* [DXFC-206] Fixed a minor memory leak related to incomplete deinitialization of the server message processor context.

Version 6.1.0
* [DXFC-199] Fixed the IPF parsing in the PerformanceTest
* The minimal version of CMake has been changed to 3.0.0
* Build on CentOS switched to CentOS 7
* [DXFC-200] [Linux] Added ability to build a static library and samples
* Win pthreads headers were removed from the project

Version 6.0.1
* [DXFC-194] Fixed bug with System.AccessViolationException while closing connection

Version 6.0.0
* [DXFC-191] Fixed a bug where crashes and memory corruption occurred when adding and removing symbols
* [DXFC-190] Fixed a bug with memory corruption during connection restoration and changing the list of subscription symbols
* [DXFC-184] [Breaking changes] The order source for subscribing to aggregated data (MarketMaker) has been changed from COMPOSITE_ASK|BID to AGGREGATE_ASK|BID.
  This is now compliant with Java API
* [DXFC-146] COM support was removed
* [DXFC-192] Fixed a bug with SEGFAULT in TLS mode when sending data on reconnection
* [DXFC-193] Fixed a bug with excess memory consumption when retrieving Option symbols
* [DXFC-171] Added descriptions to all error codes
* [DXFC-187] Fixed a bug with a second addition of the same symbols

Version 5.13.0
* [DXFC-189] Fixed a bug with inability to receive (API does not publish) orders with Scope = Aggregate

Version 5.12.0
* [DXFC-185] The new order source for cboe C2 options was added: C2OX
* [DXFC-188] Fixed a bug with concurrent call of `tls_init` function

Version 5.11.0
* [DXFC-182] The new order (price level) sources were added: ntv, glbx, xeur
* [DXFC-178] Added the ability to log received and transmitted data blocks
  - [API] Added the new function `dxf_initialize_logger_v2` with additional parameter `log_data_transfer`(compare with `dxf_initialize_logger` function).
    This flag defining the logging mode; if it's nonzero then the data transfer (portions of received and sent data) logging will be enabled.
    It will also create two files with names similar to the name of the main log file, but ending with "*.receive.data" and "*.send.data"
  - [Samples] Added the additional command line parameters:
    - `-p` - Enables the data transfer logging
    - `-o` - Sets the program timeout in seconds (default = 604800, i.e a week)

Version 5.10.0
* [DXFC-174] Added the ability to subscribe to regional quotes. Now Quote subscription requests both composite and regional events. Please, use the `scope` field to filter events.
* [DXFC-168] The list of supported order sources was updated: NTV,NFX,ESPD,XNFI,ICE,ISE,DEA,DEX,BYX,BZX,BATE,CHIX,CEUX,BXTR,IST,BI20,ABE,FAIR,GLBX,ERIS,XEUR,CFE,SMFE
* [DXFC-136] Fixed error erasure on repeated snapshot creation with same parameters
  - Changed `dx_perform_common_actions` to use `resetError` flag
  - Added internal `dx_close_subscription` function to implement `resetError` flag usage

Version 5.9.0
* Added the ability to override the type of data the application subscribes to
  - Added the API functions: `dxf_create_subscription_with_flags` and `dxf_create_subscription_timed_with_flags` which accept an additional parameter `subscr_flags`.
    - Use `dx_esf_force_ticker` flag to force subscription to ticker data
    - Use `dx_esf_force_stream` flag to force subscription to stream data
    - Use `dx_esf_force_history` flag to force subscription to history data
  - [Samples] Added an additional command line parameter "[-s <subscr_data>]" to CommandLineSample (to describe how to use the new function with flags). This parameter accepts the next values:
    - TICKER to force subscription to ticker data
    - STREAM to force subscription to stream data
    - HISTORY to force subscription to history data
* Added the candle price level attribute support. The candle price level (pl) defines additional axis to split candles within particular price corridor in addition to candle period attribute with the default value Double.NaN.
  So a one-minute candles of "AAPL" with price level 0.1 shall be specified with "AAPL{=m,pl=0.1}".
  Example: `CandleSample demo.dxfeed.com:7300 AAPL{=m,pl=0.1} -t 2020-01-01`
* Added ability to retrieve regional TnS. Now API backend (C-API) subsribes to both composite and regional TimeAndSale events. Sometimes server may sent equal composite and regional TnS which differ by suffix only (for example: TimeAndSale and TimeAndSale&K). So the `scope` field was added with possible values: dxf_osc_composite and dxf_osc_regional. Same field was added for Summary events. Please, use the `scope` field to filter out duplicates.

Version 5.8.0
* Improved the documentation (converted to doxygen format)

Version 5.7.0
* Fixed an issue with crash on reconnect (connection by TLS)
* Added ability to subscribe to "*" (wildcard) symbol
  - See descriptions of the `dxf_add_symbol`, `dxf_add_symbols`, `dxf_remove_symbol`, `dxf_remove_symbols` functions in the DXFeed.h

Version 5.6.3
* Fixed multiple symbols subscription in samples on Linux
* Fixed formatting and logging of indices, strings, timestamps and identifiers on Linux

Version 5.6.2
* Subscription process was accelerated by sorting internal symbol collection

Version 5.6.1
* Fixed an issue with incorrect index field calculation

Version 5.6.0
* Fixed an issue with exception when subscribing to empty symbols

Version 5.5.2
* Fixed a memory leak in ServerMessageProcessor

Version 5.5.1
* Used recursive mutexes on Linux
  - The pthread mutexes were converted to recursive
  - Fixed zip packaging on Linux

Version 5.5.0
* Fixed an issue with concurrent modification of record digests data
* Updated the Series API to QDS 3.271
* Fixed a Series snapshot data processing
* Added the C++ wrapper & sample

Version 5.4.0
* Notifications for connection status changes
  - the ability to notify about changes in the connection status is added. See: dxf_connection_status_t enum,
    dxf_conn_status_notifier_t callback, dxf_create_connection* and dxf_get_current_connection_status functions
* [Samples] Expand the parameter set by passing an authentication token
  - The optional command line parameter "[-T <token>]" is added
* [Samples] Add the ability to change the number of displayed records
  - The optional command line parameter "[-l <records_print_limit>]" is added (0 - unlimited).
  - Affected samples: SnapshotConsoleSample, IncSnapshotConsoleSample
* Fix build with CLion

Version 5.3.4
* Fix build with TLS on CentOS

Version 5.3.3
* Fix build for linux

Version 5.3.2
* New listener for dxf_quote_t events is added to dxf_regional_book_t

Version 5.3.1
* Fix field flags for Trade and TradeETH records

Version 5.3.0
+ Add support of regional and composite events for trades and quotes
+ Add processing of server heartbeats
+ Add API functions to get current address and other properties from connection
* Fix possible race condition between reconnection and subsciption
* Improve stability: locks revision

Version 5.2.3
* Fix authentication with Auther other than
  default Login/Password one.

Version 5.2.2
* Improve subscription: combine small network packets
  into one.

Version 5.2.0
* Records and Events were overhauled:
  - All Records and Events were synced with Java API.
  - All indexed events has `event_flags' now.
  - All index calculations must be compatible with Java.
  - All public bit flags are replaced with enums.
  - All inner (record-only) fields were removed from events.
  - Trade and TradeETH events were merged.
  - Order and SpreadOrder events were merged.
  ! These changes are not backward-compatible.

Version 5.1.1
* Fix possible race condition on working queue cleanup.

Version 5.1.0
+ Add license of LibreSSL

Version 5.0.0
+ Implement Entitlement API for C.
+ Implement support for different connection schemes.
+ Implement support for SSL/TLS.
* Fix memory leak on reconnects.
* Fix memory leak in C++ snapshot wrapper.

Version 4.9.2
* Fix ORDER (all-mixed-up) subscription.

Version 4.9.1
* Fix Quote subscription bug introduced in 4.9.0.

Version 4.9.0
+ Implement RegionalBook.
* Fix mutex misuse bug in PriceLevelBook.
* Fix memory leak in COM/C++ code.
